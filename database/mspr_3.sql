-- MySQL Script generated by MySQL Workbench
-- Thu Jul  1 17:13:12 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering
--	NO_ZERO_IN_DATE,NO_ZERO_DATE,

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mspr_3
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mspr_3
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mspr_3` DEFAULT CHARACTER SET utf8 ;
USE `mspr_3` ;

-- -----------------------------------------------------
-- Table `mspr_3`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mspr_3`.`user` (
  `id` VARCHAR(50) NOT NULL,
  `email` VARCHAR(150) NOT NULL,
  `first_name` VARCHAR(75) NOT NULL,
  `last_name` VARCHAR(75) NOT NULL,
  `token` VARCHAR(500) NOT NULL,
  `status` ENUM('admin', 'user') NOT NULL,
  `identifier` VARCHAR(75) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mspr_3`.`acount_manager`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mspr_3`.`acount_manager` (
  `id` VARCHAR(50) NOT NULL,
  `register_date` TIMESTAMP(6) NOT NULL,
  `last_password_update` TIMESTAMP(6) NOT NULL,
  `is_blocked` TINYINT NOT NULL,
  `has_to_change_password` TINYINT NOT NULL DEFAULT 1,
  `failed_attempts` TINYINT(4) NOT NULL DEFAULT 0,
  `fk_user_id` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_acount_manager_user_idx` (`fk_user_id` ASC)  ,
  CONSTRAINT `fk_acount_manager_user`
    FOREIGN KEY (`fk_user_id`)
    REFERENCES `mspr_3`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mspr_3`.`construction_site`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mspr_3`.`construction_site` (
  `id` VARCHAR(50) NOT NULL,
  `name` VARCHAR(150) NOT NULL,
  `address` VARCHAR(350) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mspr_3`.`project`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mspr_3`.`project` (
  `id` VARCHAR(50) NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `start_date` TIMESTAMP(6) NOT NULL,
  `end_date` TIMESTAMP(6) NULL,
  `fk_construction_site_id` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_project_construction_site1_idx` (`fk_construction_site_id` ASC)  ,
  CONSTRAINT `fk_project_construction_site1`
    FOREIGN KEY (`fk_construction_site_id`)
    REFERENCES `mspr_3`.`construction_site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mspr_3`.`step`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mspr_3`.`step` (
  `id` VARCHAR(50) NOT NULL,
  `name` VARCHAR(150) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mspr_3`.`capture`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mspr_3`.`capture` (
  `id` VARCHAR(50) NOT NULL,
  `reference` VARCHAR(45) NOT NULL,
  `demand_date` TIMESTAMP(6) NOT NULL,
  `expected_date` TIMESTAMP(6) NOT NULL,
  `processed_date` TIMESTAMP(6) NOT NULL,
  `gantt_reference` VARCHAR(45) NOT NULL,
  `coordinates` VARCHAR(75) NOT NULL,
  `label` VARCHAR(45) NOT NULL,
  `url` VARCHAR(500) NOT NULL,
  `type` ENUM('drones', 'intern') NOT NULL,
  `extension_file` VARCHAR(45) NOT NULL,
  `status` ENUM('asked', 'finished', 'canceled') NOT NULL,
  `fk_user_id` VARCHAR(50) NOT NULL,
  `fk_project_id` VARCHAR(50) NOT NULL,
  `fk_step_id` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_capture_user1_idx` (`fk_user_id` ASC)  ,
  INDEX `fk_capture_project1_idx` (`fk_project_id` ASC)  ,
  INDEX `fk_capture_step1_idx` (`fk_step_id` ASC)  ,
  CONSTRAINT `fk_capture_user1`
    FOREIGN KEY (`fk_user_id`)
    REFERENCES `mspr_3`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_capture_project1`
    FOREIGN KEY (`fk_project_id`)
    REFERENCES `mspr_3`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_capture_step1`
    FOREIGN KEY (`fk_step_id`)
    REFERENCES `mspr_3`.`step` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mspr_3`.`problem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mspr_3`.`problem` (
  `id` VARCHAR(50) NOT NULL,
  `label` VARCHAR(1000) NOT NULL,
  `status` ENUM('pending', 'canceled', 'solved') NOT NULL,
  `created_date` TIMESTAMP(6) NOT NULL,
  `updated_date` TIMESTAMP(6) NOT NULL,
  `fk_capture_id` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_problem_capture1_idx` (`fk_capture_id` ASC)  ,
  CONSTRAINT `fk_problem_capture1`
    FOREIGN KEY (`fk_capture_id`)
    REFERENCES `mspr_3`.`capture` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mspr_3`.`subconstructor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mspr_3`.`subconstructor` (
  `id` VARCHAR(50) NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mspr_3`.`project_subconstructor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mspr_3`.`project_subconstructor` (
  `project_id` VARCHAR(50) NOT NULL,
  `subconstructor_id` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`project_id`, `subconstructor_id`),
  INDEX `fk_project_has_subcontractor_subcontractor1_idx` (`subconstructor_id` ASC)  ,
  INDEX `fk_project_has_subcontractor_project1_idx` (`project_id` ASC)  ,
  CONSTRAINT `fk_project_has_subcontractor_project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `mspr_3`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_project_has_subcontractor_subcontractor1`
    FOREIGN KEY (`subconstructor_id`)
    REFERENCES `mspr_3`.`subconstructor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mspr_3`.`job_sector`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mspr_3`.`job_sector` (
  `id` VARCHAR(50) NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mspr_3`.`step_job_sector`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mspr_3`.`step_job_sector` (
  `step_id` VARCHAR(50) NOT NULL,
  `job_sector_id` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`step_id`, `job_sector_id`),
  INDEX `fk_step_has_job_sector_job_sector1_idx` (`job_sector_id` ASC)  ,
  INDEX `fk_step_has_job_sector_step1_idx` (`step_id` ASC)  ,
  CONSTRAINT `fk_step_has_job_sector_step1`
    FOREIGN KEY (`step_id`)
    REFERENCES `mspr_3`.`step` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_step_has_job_sector_job_sector1`
    FOREIGN KEY (`job_sector_id`)
    REFERENCES `mspr_3`.`job_sector` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mspr_3`.`subconstructor_job_sector`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mspr_3`.`subconstructor_job_sector` (
  `subconstructor_id` VARCHAR(50) NOT NULL,
  `job_sector_id` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`subconstructor_id`, `job_sector_id`),
  INDEX `fk_subconstructor_has_job_sector_job_sector1_idx` (`job_sector_id` ASC)  ,
  INDEX `fk_subconstructor_has_job_sector_subconstructor1_idx` (`subconstructor_id` ASC)  ,
  CONSTRAINT `fk_subconstructor_has_job_sector_subconstructor1`
    FOREIGN KEY (`subconstructor_id`)
    REFERENCES `mspr_3`.`subconstructor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_subconstructor_has_job_sector_job_sector1`
    FOREIGN KEY (`job_sector_id`)
    REFERENCES `mspr_3`.`job_sector` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mspr_3`.`user_project`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mspr_3`.`user_project` (
  `id` VARCHAR(50) NOT NULL,
  `role` ENUM('in_charge', 'worker') NOT NULL,
  `fk_user_id` VARCHAR(50) NOT NULL,
  `fk_project_id` VARCHAR(50) NOT NULL,
  `fk_job_sector_id` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_project_user1_idx` (`fk_user_id` ASC) ,
  INDEX `fk_user_project_project1_idx` (`fk_project_id` ASC) ,
  INDEX `fk_user_project_job_sector1_idx` (`fk_job_sector_id` ASC) ,
  CONSTRAINT `fk_user_project_user1`
    FOREIGN KEY (`fk_user_id`)
    REFERENCES `mspr_3`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_project_project1`
    FOREIGN KEY (`fk_project_id`)
    REFERENCES `mspr_3`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_project_job_sector1`
    FOREIGN KEY (`fk_job_sector_id`)
    REFERENCES `mspr_3`.`job_sector` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mspr_3`.`accounting_export`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mspr_3`.`accounting_export` (
  `id` VARCHAR(50) NOT NULL,
  `start_date` DATE NOT NULL,
  `end_date` DATE NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
